// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace test {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.ECS;
    using uFrame.ECS.UnityUtilities;
    using uFrame.Kernel;
    using UnityEngine;
    
    
    public class InputSystemOnMouseDownHandler {
        
        public HealthComponent Source;
        
        private uFrame.ECS.UnityUtilities.MouseDownDispatcher _Event;
        
        private uFrame.ECS.Systems.EcsSystem _System;
        
        private int ActionNode4_a = default( System.Int32 );
        
        private int ActionNode4_b = default( System.Int32 );
        
        private int IntNode3 = 10;
        
        private int ActionNode4_Result = default( System.Int32 );
        
        public uFrame.ECS.UnityUtilities.MouseDownDispatcher Event {
            get {
                return _Event;
            }
            set {
                _Event = value;
            }
        }
        
        public uFrame.ECS.Systems.EcsSystem System {
            get {
                return _System;
            }
            set {
                _System = value;
            }
        }
        
        public virtual System.Collections.IEnumerator Execute() {
            ActionNode4_a = Source.health;
            ActionNode4_b = IntNode3;
            // ActionNode
            while (this.DebugInfo("8db86060-7116-447c-8f93-aa1efa9d7b06","1dd6cc4c-759e-4c56-ab4c-d7c357633933", this) == 1) yield return null;
            // Visit uFrame.ECS.Actions.IntLibrary.Subtract
            ActionNode4_Result = uFrame.ECS.Actions.IntLibrary.Subtract(ActionNode4_a, ActionNode4_b);
            // SetVariableNode
            while (this.DebugInfo("1dd6cc4c-759e-4c56-ab4c-d7c357633933","8cd27c30-9c00-4c75-a797-3bae24115ea3", this) == 1) yield return null;
            Source.health = (System.Int32)ActionNode4_Result;
            yield break;
        }
    }
}
